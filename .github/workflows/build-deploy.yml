name: Build and Deploy SISO-PUBLIC Monorepo

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  
jobs:
  # Job 1: Install and cache dependencies
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci

  # Job 2: Build shared packages
  build-packages:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build shared packages
        run: npm run build:packages
      
      - name: Cache build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
          key: packages-${{ github.sha }}
          
  # Job 3: Lint and Type Check
  quality-checks:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint code
        run: npm run lint
      
      - name: Type check
        run: npm run type-check

  # Job 4: Run tests
  test:
    runs-on: ubuntu-latest
    needs: [setup, build-packages]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
          key: packages-${{ github.sha }}
      
      - name: Run tests
        run: npm run test

  # Job 5: Build client app
  build-clients:
    runs-on: ubuntu-latest
    needs: [build-packages, quality-checks]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
          key: packages-${{ github.sha }}
      
      - name: Build clients app
        run: npm run build:clients
        env:
          VITE_APP_TYPE: client
          VITE_API_URL: ${{ secrets.API_URL }}
      
      - name: Analyze bundle size
        run: npm run analyze -w apps/clients
      
      - name: Upload clients build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: clients-dist
          path: apps/clients/dist

  # Job 6: Build partner app
  build-partners:
    runs-on: ubuntu-latest
    needs: [build-packages, quality-checks]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Restore build artifacts
        uses: actions/cache@v3
        with:
          path: |
            packages/*/dist
          key: packages-${{ github.sha }}
      
      - name: Build partners app
        run: npm run build:partners
        env:
          VITE_APP_TYPE: partner
          VITE_API_URL: ${{ secrets.API_URL }}
      
      - name: Analyze bundle size
        run: npm run analyze -w apps/partners
      
      - name: Upload partners build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: partners-dist
          path: apps/partners/dist

  # Job 7: Deploy to Vercel (only on main branch)
  deploy-production:
    runs-on: ubuntu-latest
    needs: [build-clients, build-partners, test]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download clients build
        uses: actions/download-artifact@v4
        with:
          name: clients-dist
          path: apps/clients/dist
      
      - name: Download partners build
        uses: actions/download-artifact@v4
        with:
          name: partners-dist
          path: apps/partners/dist
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          vercel-args: '--prod'

  # Job 8: Performance analysis and reporting
  performance-analysis:
    runs-on: ubuntu-latest
    needs: [build-clients, build-partners]
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: '*-dist'
          merge-multiple: true
      
      - name: Bundle size analysis
        run: |
          echo "## Bundle Size Analysis" >> $GITHUB_STEP_SUMMARY
          echo "### Client App" >> $GITHUB_STEP_SUMMARY
          ls -la apps/clients/dist/assets/js/ | head -10 >> $GITHUB_STEP_SUMMARY
          echo "### Partner App" >> $GITHUB_STEP_SUMMARY
          ls -la apps/partners/dist/assets/js/ | head -10 >> $GITHUB_STEP_SUMMARY
          
          # Calculate total sizes
          CLIENT_SIZE=$(du -sh apps/clients/dist | cut -f1)
          PARTNER_SIZE=$(du -sh apps/partners/dist | cut -f1)
          echo "**Client App Total**: $CLIENT_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "**Partner App Total**: $PARTNER_SIZE" >> $GITHUB_STEP_SUMMARY